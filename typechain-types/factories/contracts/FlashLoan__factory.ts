/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FlashLoan, FlashLoanInterface } from "../../contracts/FlashLoan";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addressProvider",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ADDRESSES_PROVIDER",
    outputs: [
      {
        internalType: "contract IPoolAddressesProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POOL",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "executeOperation",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "requestFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610df0380380610df0833981810160405281019061003291906101b3565b808073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d691906101b3565b73ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101e0565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018082610155565b9050919050565b61019081610175565b811461019b57600080fd5b50565b6000815190506101ad81610187565b92915050565b6000602082840312156101c9576101c8610150565b5b60006101d78482850161019e565b91505092915050565b60805160a051610bdd610213600039600081816101da015281816103fb0152610444015260006101890152610bdd6000f3fe6080604052600436106100595760003560e01c80630542975c146100655780631b11d0ff1461009057806351cff8d9146100cd5780637535d246146100f6578063d54ba95414610121578063f8b2cb4f1461014a57610060565b3661006057005b600080fd5b34801561007157600080fd5b5061007a610187565b60405161008791906105e0565b60405180910390f35b34801561009c57600080fd5b506100b760048036038101906100b291906106de565b6101ab565b6040516100c49190610793565b60405180910390f35b3480156100d957600080fd5b506100f460048036038101906100ef91906107ae565b61026a565b005b34801561010257600080fd5b5061010b6103f9565b60405161011891906107fc565b60405180910390f35b34801561012d57600080fd5b5061014860048036038101906101439190610817565b61041d565b005b34801561015657600080fd5b50610171600480360381019061016c91906107ae565b6104de565b60405161017e9190610866565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60008085876101ba91906108b0565b90508773ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b8152600401610217929190610915565b6020604051808303816000875af1158015610236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025a919061096a565b5060019150509695505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef90610a1a565b60405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103539190610a3a565b602060405180830381865afa158015610370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103949190610a6a565b6040518363ffffffff1660e01b81526004016103b1929190610915565b6020604051808303816000875af11580156103d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f4919061096a565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600030905060008390506000839050600060405180602001604052806000815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166342b0b77c86868686866040518663ffffffff1660e01b81526004016104a3959493929190610b4d565b600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b5050505050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105199190610a3a565b602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a9190610a6a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105a66105a161059c84610561565b610581565b610561565b9050919050565b60006105b88261058b565b9050919050565b60006105ca826105ad565b9050919050565b6105da816105bf565b82525050565b60006020820190506105f560008301846105d1565b92915050565b600080fd5b600080fd5b600061061082610561565b9050919050565b61062081610605565b811461062b57600080fd5b50565b60008135905061063d81610617565b92915050565b6000819050919050565b61065681610643565b811461066157600080fd5b50565b6000813590506106738161064d565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261069e5761069d610679565b5b8235905067ffffffffffffffff8111156106bb576106ba61067e565b5b6020830191508360018202830111156106d7576106d6610683565b5b9250929050565b60008060008060008060a087890312156106fb576106fa6105fb565b5b600061070989828a0161062e565b965050602061071a89828a01610664565b955050604061072b89828a01610664565b945050606061073c89828a0161062e565b935050608087013567ffffffffffffffff81111561075d5761075c610600565b5b61076989828a01610688565b92509250509295509295509295565b60008115159050919050565b61078d81610778565b82525050565b60006020820190506107a86000830184610784565b92915050565b6000602082840312156107c4576107c36105fb565b5b60006107d28482850161062e565b91505092915050565b60006107e6826105ad565b9050919050565b6107f6816107db565b82525050565b600060208201905061081160008301846107ed565b92915050565b6000806040838503121561082e5761082d6105fb565b5b600061083c8582860161062e565b925050602061084d85828601610664565b9150509250929050565b61086081610643565b82525050565b600060208201905061087b6000830184610857565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108bb82610643565b91506108c683610643565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108fb576108fa610881565b5b828201905092915050565b61090f81610605565b82525050565b600060408201905061092a6000830185610906565b6109376020830184610857565b9392505050565b61094781610778565b811461095257600080fd5b50565b6000815190506109648161093e565b92915050565b6000602082840312156109805761097f6105fb565b5b600061098e84828501610955565b91505092915050565b600082825260208201905092915050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610a04602e83610997565b9150610a0f826109a8565b604082019050919050565b60006020820190508181036000830152610a33816109f7565b9050919050565b6000602082019050610a4f6000830184610906565b92915050565b600081519050610a648161064d565b92915050565b600060208284031215610a8057610a7f6105fb565b5b6000610a8e84828501610a55565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ad1578082015181840152602081019050610ab6565b83811115610ae0576000848401525b50505050565b6000601f19601f8301169050919050565b6000610b0282610a97565b610b0c8185610aa2565b9350610b1c818560208601610ab3565b610b2581610ae6565b840191505092915050565b600061ffff82169050919050565b610b4781610b30565b82525050565b600060a082019050610b626000830188610906565b610b6f6020830187610906565b610b7c6040830186610857565b8181036060830152610b8e8185610af7565b9050610b9d6080830184610b3e565b969550505050505056fea264697066735822122026f1ec06da23b44da607af6d426c17f61fe5843d8826558c2ce1f3c406766fbf64736f6c634300080a0033";

type FlashLoanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashLoanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashLoan__factory extends ContractFactory {
  constructor(...args: FlashLoanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashLoan> {
    return super.deploy(
      _addressProvider,
      overrides || {}
    ) as Promise<FlashLoan>;
  }
  override getDeployTransaction(
    _addressProvider: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_addressProvider, overrides || {});
  }
  override attach(address: string): FlashLoan {
    return super.attach(address) as FlashLoan;
  }
  override connect(signer: Signer): FlashLoan__factory {
    return super.connect(signer) as FlashLoan__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashLoanInterface {
    return new utils.Interface(_abi) as FlashLoanInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashLoan {
    return new Contract(address, _abi, signerOrProvider) as FlashLoan;
  }
}
